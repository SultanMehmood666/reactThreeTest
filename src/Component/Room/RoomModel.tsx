'use client';
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: dylanheyes (https://sketchfab.com/dylanheyes)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/modern-dining-room-df3f3c9f6233447eb8b7ee129f3bace5
Title: Modern Dining Room
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Modern_Dining_Room_Floor_0: THREE.Mesh
    Walls_Walls_0: THREE.Mesh
    Roof_Roof_0: THREE.Mesh
    Backdrop_Backdrop_0: THREE.Mesh
    DoorFrame_DoorFrame_0: THREE.Mesh
    Window_Window_0: THREE.Mesh
    DiningTable_DiningTable_0: THREE.Mesh
    Pot_Pot_0: THREE.Mesh
    CurtainPole_CurtainPole_0: THREE.Mesh
    Curtains_Curtains_0: THREE.Mesh
    Paintings_Paintings_0: THREE.Mesh
    PictureFrame_PictureFrame_0: THREE.Mesh
    Picture_Picture_0: THREE.Mesh
    Plant_Plant_0: THREE.Mesh
    Carpet_Carpet_0: THREE.Mesh
    LightChrome_LightChrome_0: THREE.Mesh
    LightGlass_Lights_0: THREE.Mesh
  }
  materials: {
    Floor: THREE.MeshStandardMaterial
    Walls: THREE.MeshStandardMaterial
    Roof: THREE.MeshStandardMaterial
    Backdrop: THREE.MeshStandardMaterial
    DoorFrame: THREE.MeshStandardMaterial
    Window: THREE.MeshStandardMaterial
    DiningTable: THREE.MeshStandardMaterial
    material: THREE.MeshStandardMaterial
    CurtainPole: THREE.MeshStandardMaterial
    Curtains: THREE.MeshStandardMaterial
    Paintings: THREE.MeshStandardMaterial
    PictureFrame: THREE.MeshStandardMaterial
    Picture: THREE.MeshStandardMaterial
    Plant: THREE.MeshStandardMaterial
    Carpet: THREE.MeshStandardMaterial
    LightChrome: THREE.MeshPhysicalMaterial
    Lights: THREE.MeshStandardMaterial
  }
}

function RoomModel(props: JSX.IntrinsicElements['group']) {

  const { nodes, materials } = useGLTF('/RoomModel/scene.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, Math.PI]} scale={0.17477687}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group
            position={[0, -4.8918066, 0]}
            rotation={[-Math.PI / 2, -9e-8, Math.PI]}
            scale={[1379.09985352, 1734.00024414, 764.99993896]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Modern_Dining_Room_Floor_0.geometry}
              material={materials.Floor}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Walls_Walls_0.geometry}
              material={materials.Walls}
              position={[0, 0, 0.00639452]}
              scale={[0.9861505, 1, 1]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Roof_Roof_0.geometry}
              material={materials.Roof}
              position={[0, 0, 1.10639453]}
              scale={[0.9861505, 1, 1]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Backdrop_Backdrop_0.geometry}
              material={materials.Backdrop}
              position={[0, 1.55709326, 0.00639452]}
              rotation={[Math.PI / 2, 0, 0]}
              scale={[1.94329679, 3.50326824, 1.54555929]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.DoorFrame_DoorFrame_0.geometry}
              material={materials.DoorFrame}
              position={[1e-8, 1.12883544, -0.31499898]}
              scale={[0.9861505, 1, 1]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Window_0.geometry}
              material={materials.Window}
              position={[0, 0, 0.00639452]}
              scale={[0.9861505, 1, 1]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.DiningTable_DiningTable_0.geometry}
              material={materials.DiningTable}
              position={[-2e-8, 0.05767015, -0.56749278]}
              scale={[0.14502214, 0.11534024, 0.26143792]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Pot_Pot_0.geometry}
              material={materials.material}
              position={[0, 0.05767012, -0.42902538]}
              scale={[0.07251107, 0.05767012, 0.13071896]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.CurtainPole_CurtainPole_0.geometry}
              material={materials.CurtainPole}
              position={[0, 1.09573233, 0.7907083]}
              rotation={[0, Math.PI / 2, 0]}
              scale={[0.02352941, 0.01038062, 0.6147489]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Curtains_Curtains_0.geometry}
              material={materials.Curtains}
              position={[-0.00013284, 1.06560624, 0.26954368]}
              scale={[0.15952435, 0.36908877, 0.13071896]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Paintings_Paintings_0.geometry}
              material={materials.Paintings}
              position={[1.17437696, 0.17301036, 0.00639452]}
              scale={[0.07251107, 0.05767012, 0.13071896]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.PictureFrame_PictureFrame_0.geometry}
              material={materials.PictureFrame}
              position={[-1.17667615, 0.05767012, 0.00639452]}
              scale={[0.51555371, 0.61505187, 0.92941183]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Picture_Picture_0.geometry}
              material={materials.Picture}
              position={[-1.17346287, 0.05767012, 0.00639452]}
              scale={[0.51555371, 0.61505187, 0.92941183]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Plant_Plant_0.geometry}
              material={materials.Plant}
              position={[0.00101489, 0.05845812, -0.17737503]}
              scale={[0.04350664, 0.03460207, 0.07843138]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Carpet_Carpet_0.geometry}
              material={materials.Carpet}
              position={[0, 0.05767012, -1.08867872]}
              scale={[0.88727456, 0.51764697, 0.17254904]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.LightChrome_LightChrome_0.geometry}
              material={materials.LightChrome}
              position={[-3e-8, 0.05767014, 0.8337903]}
              scale={[0.00344573, 0.00274048, 0.00621177]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.LightGlass_Lights_0.geometry}
              material={materials.Lights}
              position={[0, 0.05767016, 0.45637041]}
              scale={[0.00344573, 0.00274048, 0.00621177]}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/RoomModel/scene.glb');

export default RoomModel;